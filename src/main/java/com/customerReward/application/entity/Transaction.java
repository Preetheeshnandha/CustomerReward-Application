package com.customerReward.application.entity;

import java.time.LocalDate;

import com.fasterxml.jackson.annotation.JsonBackReference;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;


/**
 * Entity class representing a transaction made by a customer.
 *
 * <p>This class maps to the {@code transactions} table in the database
 * and stores details such as the transaction date, amount, and the associated customer.</p>
 *
 * <p>Each transaction is linked to a single {@link Customer}, forming a many-to-one relationship.
 * JSON serialization is managed using {@code @JsonBackReference} to avoid infinite recursion
 * when serializing bidirectional relationships.</p>
 *
 * <p>Lombok annotations reduce boilerplate code for constructors and accessors.</p>
 *
 * @author Preetheeshnandha
 */
@Entity
@Table(name="transactions")
@Getter
@Setter
@AllArgsConstructor	
@NoArgsConstructor
public class Transaction {

	/**
     * The unique identifier for the transaction.
     * Auto-generated by the database.
     */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name="transaction_id")
	@NotNull
	private Long transactionId;
	
	/**
     * The date on which the transaction was made.
     * Cannot be null.
     */
	@NotNull
	@Column(name="transaction_date")
	private LocalDate transactionDate;
	
	/**
     * The amount spent in this transaction.
     * Cannot be null.
     */
	@NotNull
	@Column(name="transaction_amount")
	private long transactionAmount;
	
	/**
     * The customer who made the transaction.
     *
     * <p>This is a mandatory field and represents a many-to-one relationship
     * with the {@link Customer} entity. Uses lazy loading for performance.</p>
     *
     * <p>{@code @JsonBackReference} is used to prevent circular references
     * during JSON serialization.</p>
     */
	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="customer_id", nullable=false)
	@JsonBackReference
	@NotNull
	private Customer customer;
	
}
