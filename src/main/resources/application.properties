################################################################################
# Application Configuration: CustomerReward-Application
# ------------------------------------------------------
# This configuration sets up a Spring Boot application with an H2 in-memory 
# database for development and testing. It enables Hibernate automatic DDL 
# management, SQL script initialization, and the H2 web console.
################################################################################

# Name of the Spring Boot application (used in service discovery, logging, etc.)
spring.application.name=CustomerReward-Application


# Hibernate DDL auto configuration:
# 'update' will update the schema automatically based on entity definitions.
# Possible values: none, validate, update, create, create-drop
spring.jpa.hibernate.ddl-auto=update

# Always initialize the database using schema/data SQL files (if present)
spring.sql.init.mode=always

# Enable the H2 web console for debugging the in-memory database
spring.h2.console.enabled=true

# Path to access the H2 console (e.g., http://localhost:8080/h2-console)
spring.h2.console.path=/h2-console

# H2 in-memory database connection URL
spring.datasource.url=jdbc:h2:mem:testdb

# H2 JDBC driver class
spring.datasource.driver-class-name=org.h2.Driver

# H2 database username (default for in-memory)
spring.datasource.username=sa

# H2 database password (empty for in-memory usage)
spring.datasource.password=

# Specifies the Hibernate dialect for H2 database
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
